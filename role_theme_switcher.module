<?php
/**
 * @file
 * Assign different themes to roles on your site.
 */

/**
 * Implements hook_config_info().
 */
function role_theme_switcher_config_info() {
  return array(
    'role_theme_switcher.settings' => array(
      'label' => t('Role Theme Switcher settings'),
      'group' => t('Configuration'),
    ),
  );
}

/**
 * Implements hook_custom_theme().
 */
function role_theme_switcher_custom_theme() {
  global $user;

  foreach ($user->roles as $role) {
    if ($role_theme = config_get('role_theme_switcher.settings', $role)) {
      return $role_theme;
    }
  }
}

/**
 * Implements hook_menu().
 */
function role_theme_switcher_menu() {
  return array(
    'admin/config/people/role-theme-switcher' => array(
      'title' => 'Role theme switcher',
      'description' => 'Assign different themes to roles on your site.',
      'page callback' => 'backdrop_get_form',
      'page arguments' => array('role_theme_switcher_settings'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    ),
  );
}

/**
 * Form builder function for module settings.
 */
function role_theme_switcher_settings() {
  $form['#config'] = 'role_theme_switcher.settings';
  $config = config('role_theme_switcher.settings');

  // Get available themes.
  $options = array('' => t('Default theme'));
  foreach (list_themes() as $theme) {
    if (backdrop_theme_access($theme)) {
    	$options[$theme->name] = $theme->info['name'];
    }
  }

  foreach (user_roles() as $id => $name) {
    $form[$id] = array(
      '#type' => 'select',
      '#title' => $name,
      '#options' => $options,
      '#default_value' => $config->get($id),
    );
  }

  return system_settings_form($form);
}
